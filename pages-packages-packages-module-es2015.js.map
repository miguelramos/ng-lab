{"version":3,"sources":["./src/app/pages/packages/packages-resolver.ts","./src/app/pages/packages/packages-routing.module.ts","./src/app/pages/packages/packages-service.ts","./src/app/pages/packages/packages.component.ts","./src/app/pages/packages/packages.component.html","./src/app/pages/packages/packages.module.ts","./src/app/pages/packages/state/packages.state.ts"],"names":[],"mappings":"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","file":"pages-packages-packages-module-es2015.js","sourcesContent":["import { Resolve, ActivatedRouteSnapshot } from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { PackageState } from './state/packages.state';\n\n@Injectable()\nexport class PackagesResolver implements Resolve<any> {\n  constructor(\n    private packageState: PackageState\n  ) { }\n\n  public resolve(route: ActivatedRouteSnapshot) {\n    const pkgId = Number(route.paramMap.get('id'));\n\n    return this.packageState.getPackage(pkgId);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { PackagesComponent } from './packages.component';\nimport { PackagesResolver } from './packages-resolver';\n\nconst routes: Routes = [\n  {\n    path: ':id',\n    component: PackagesComponent,\n    resolve: {\n      packages: PackagesResolver\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  providers: [PackagesResolver],\n  exports: [RouterModule]\n})\nexport class PackagesRoutingModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpUrlService } from '@ng-lab/http/url';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { PackageModel } from './state/packages-model';\n\n@Injectable()\nexport class PackagesService {\n  constructor(\n    private readonly urlService: HttpUrlService,\n    private readonly httpService: HttpClient\n  ) { }\n\n  public fetchAll() {\n    const urlPackages = this.urlService.get('PACKAGES.FETCH');\n\n    return this.httpService.get<{data: PackageModel[]}>(urlPackages).pipe(\n      map(response => response.data)\n    );\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { PackageState } from './state/packages.state';\nimport { Observable } from 'rxjs';\nimport { PackageModel } from './state/packages-model';\nimport { Snippet } from '../../components/code/code-snipet';\n\n@Component({\n  selector: 'ng-lab-packages',\n  templateUrl: './packages.component.html',\n  styleUrls: ['./packages.component.scss']\n})\nexport class PackagesComponent implements OnInit {\n\n  package$: Observable<PackageModel>;\n\n  configExample = Snippet({\n    lang: 'typescript',\n    code: `\n    import { ConfiguratorModule } from '@ng-lab/configurator';\n\n    const CONFIG = {\n      ENV: environment,\n      PRODUCTION: environment.production,\n      DOMAINS_API: [\n        { HOST: '', KEY: '@local' },\n        { HOST: '', KEY: '@origin', ORIGIN: true },\n        { HOST: environment.api, KEY: '@api' }\n      ],\n      ENDPOINTS: {}\n    };\n\n    @NgModule({\n      imports: [\n        ConfiguratorModule.forRoot(CONFIG),\n      ],\n      exports: [\n        ConfiguratorModule\n      ]\n    })\n    export class ApplicationProvisionModule {}\n\n    const configuratorService: ConfiguratorService = new ConfiguratorService();\n\n    const settings = {\n      one: 1,\n      setting: 2,\n      with: {\n        deep: {\n          notation: 3\n        }\n      }\n    };\n\n    configuratorService.setOption('settings', settings);\n    configuratorService.hasOption('settings.with.deep.notation');\n    `\n  });\n\n  constructor(\n    private readonly pkgState: PackageState\n  ) { }\n\n  ngOnInit(): void {\n    this.package$ = this.pkgState.packages$;\n  }\n\n}\n","<ng-container *ngIf=\"package$ | async as pkg\">\n  <div class=\"ui-banner\">\n    <ui-layout-area\n      [flexGrow]=\"0\"\n      [flexShrink]=\"0\"\n      margin=\"0 2% 0 0\"\n    >\n      <img class=\"ui-banner__logo\" [src]=\"pkg.logo\" alt=\"{{pkg.title}}\">\n    </ui-layout-area>\n    <ui-layout-area [flexGrow]=\"1\">\n      <h2>\n        {{pkg.title}}\n        <img src=\"{{pkg.badge}}?style=flat\" alt=\"\">\n      </h2>\n      <p style=\"margin-bottom: 2px;\">npm install {{pkg.namespace}}</p>\n      <p style=\"margin-top: 0;\">{{pkg.description}}</p>\n    </ui-layout-area>\n  </div>\n  <section class=\"md-card\">\n    <markdown [src]=\"pkg.md\"></markdown>\n  </section>\n</ng-container>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PackagesRoutingModule } from './packages-routing.module';\nimport { PackagesComponent } from './packages.component';\nimport { PackageState } from './state/packages.state';\nimport { NgxsModule } from '@ngxs/store';\nimport { PackagesService } from './packages-service';\nimport { LayoutModule } from '@ng-lab/layout';\nimport { MarkdownModule } from 'ngx-markdown';\n\n@NgModule({\n  declarations: [PackagesComponent],\n  providers: [PackagesService],\n  imports: [\n    CommonModule,\n    LayoutModule,\n    PackagesRoutingModule,\n    NgxsModule.forFeature([PackageState]),\n    MarkdownModule.forChild()\n  ]\n})\nexport class PackagesModule { }\n","import { action, NgxsDataRepository, StateRepository } from '@ngxs-labs/data';\nimport { Injectable } from '@angular/core';\nimport { PackageModel } from './packages-model';\nimport { State, Select } from '@ngxs/store';\nimport { PackagesService } from '../packages-service';\nimport { map, first, tap } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\n\n@StateRepository()\n@State<PackageModel>({\n  name: 'packages',\n  defaults: {\n    id: null,\n    title: null,\n    slug: null,\n    logo: null,\n    description: null,\n    namespace: null,\n    badge: null,\n    href: null,\n    md: null\n  }\n})\n@Injectable()\nexport class PackageState extends NgxsDataRepository<PackageModel> {\n  @Select(state => state.packages)\n  public packages$: Observable<PackageModel>;\n\n  constructor(\n    private readonly packageService: PackagesService\n  ) {\n    super();\n  }\n\n  @action()\n  public getPackage(id: number) {\n    return this.packageService.fetchAll().pipe(\n      map(packages => packages.filter(pkg => pkg.id === id)),\n      tap(packages => {\n        const [ pkg ] = packages;\n\n        this.setState((state) => ({...state, ...pkg}));\n      })\n    );\n  }\n}\n"],"sourceRoot":"webpack:///"}